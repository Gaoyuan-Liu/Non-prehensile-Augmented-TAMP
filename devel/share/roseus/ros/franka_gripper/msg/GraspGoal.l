;; Auto-generated. Do not edit!


(when (boundp 'franka_gripper::GraspGoal)
  (if (not (find-package "FRANKA_GRIPPER"))
    (make-package "FRANKA_GRIPPER"))
  (shadow 'GraspGoal (find-package "FRANKA_GRIPPER")))
(unless (find-package "FRANKA_GRIPPER::GRASPGOAL")
  (make-package "FRANKA_GRIPPER::GRASPGOAL"))

(in-package "ROS")
;;//! \htmlinclude GraspGoal.msg.html


(defclass franka_gripper::GraspGoal
  :super ros::object
  :slots (_width _epsilon _speed _force ))

(defmethod franka_gripper::GraspGoal
  (:init
   (&key
    ((:width __width) 0.0)
    ((:epsilon __epsilon) (instance franka_gripper::GraspEpsilon :init))
    ((:speed __speed) 0.0)
    ((:force __force) 0.0)
    )
   (send-super :init)
   (setq _width (float __width))
   (setq _epsilon __epsilon)
   (setq _speed (float __speed))
   (setq _force (float __force))
   self)
  (:width
   (&optional __width)
   (if __width (setq _width __width)) _width)
  (:epsilon
   (&rest __epsilon)
   (if (keywordp (car __epsilon))
       (send* _epsilon __epsilon)
     (progn
       (if __epsilon (setq _epsilon (car __epsilon)))
       _epsilon)))
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:force
   (&optional __force)
   (if __force (setq _force __force)) _force)
  (:serialization-length
   ()
   (+
    ;; float64 _width
    8
    ;; franka_gripper/GraspEpsilon _epsilon
    (send _epsilon :serialization-length)
    ;; float64 _speed
    8
    ;; float64 _force
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _width
       (sys::poke _width (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; franka_gripper/GraspEpsilon _epsilon
       (send _epsilon :serialize s)
     ;; float64 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _force
       (sys::poke _force (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _width
     (setq _width (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; franka_gripper/GraspEpsilon _epsilon
     (send _epsilon :deserialize buf ptr-) (incf ptr- (send _epsilon :serialization-length))
   ;; float64 _speed
     (setq _speed (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _force
     (setq _force (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get franka_gripper::GraspGoal :md5sum-) "627a0f0b10ad0c919fbd62b0b3427e63")
(setf (get franka_gripper::GraspGoal :datatype-) "franka_gripper/GraspGoal")
(setf (get franka_gripper::GraspGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float64 width # [m]
GraspEpsilon epsilon
float64 speed # [m/s]
float64 force # [N]

================================================================================
MSG: franka_gripper/GraspEpsilon
float64 inner # [m]
float64 outer # [m]

")



(provide :franka_gripper/GraspGoal "627a0f0b10ad0c919fbd62b0b3427e63")


